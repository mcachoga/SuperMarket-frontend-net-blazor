@page "/pages/identity/user-roles/{UserId}"
@using SuperMarket.Common.Authorization;
@using SuperMarket.Common.Responses.Identity;

@attribute [MustHavePermission(AppFeature.Roles, AppAction.Read)]

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<Header OnClose="Cancel" Title="@_title" Description="@_descr" />
@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudTable Hover="true" Elevation="25" Items="_userRolesList" Dense="true" @bind-userRole="_userRole">
        <ToolBarContent>
            <div class="justify-center mud-text-align-center">
                @if (_canUpdateUserRoles)
                {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="UpdateUserRolesAsync" ButtonType="ButtonType.Submit">Update User Roles</MudButton>
                }
            </div>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRoleViewModel, object>(x => x.RoleName)">Role Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRoleViewModel, object>(x => x.RoleDescription)">Description</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRoleViewModel, object>(x => x.IsAssignedToUser)">Is Assigned</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Role Name">
                @context.RoleName
            </MudTd>
            <MudTd DataLabel="Description">
                @context.RoleDescription
            </MudTd>
            <MudTd DataLabel="Role">
                <MudCheckBox @bind-Checked="@context.IsAssignedToUser" Disabled="@(!_canUpdateUserRoles)" Color="Color.Secondary">
                </MudCheckBox>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}
